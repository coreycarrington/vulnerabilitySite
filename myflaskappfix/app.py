from flask import Flask, render_template, redirect, url_for, session, flash, logging, request, send_from_directory, json
from flask_mysqldb import MySQL
from wtforms import Form, StringField, TextAreaField, PasswordField, validators
from passlib.hash import sha256_crypt
import os
import time
import errno

DEFAULT_UPLOADS_FOLDER = "uploads/"
app = Flask(__name__)
# app.debug = True #Used for debugging mode or can use app.run(debug=True)
app.config['UPLOAD_FOLDER'] = DEFAULT_UPLOADS_FOLDER

# Config MySQL
app.config['MYSQL_HOST'] = 'localhost'
app.config['MYSQL_USER'] = 'root'
app.config['MYSQL_PASSWORD'] = 'cac844'
app.config['MYSQL_DB'] = 'myflaskapp'
app.config['MYSQL_CURSORCLASS'] = 'DictCursor'

# init MySQL
mysql = MySQL(app)


@app.before_request
def do_something_whenever_a_request_comes_in():
    try:
        os.makedirs(DEFAULT_UPLOADS_FOLDER)
    except OSError as exception:
        if exception.errno != errno.EEXIST:
            raise


@app.route('/')
def index():
    return render_template('home.html')


class RegisterForm(Form):
    name = StringField('Name', [validators.Length(min=1, max=50)])
    username = StringField('Username', [validators.Length(min=3, max=25)])
    email = StringField('Email', [validators.Length(min=4, max=50)])
    password = PasswordField('Password', [
        validators.DataRequired(),
        validators.EqualTo('confirm', message='Password do not match')
    ])
    confirm = PasswordField('Confirm Password')


@app.route('/register', methods=['GET', 'POST'])
def register():
    form = RegisterForm(request.form)
    if request.method == 'POST' and form.validate():
        name = form.name.data
        email = form.email.data
        username = form.username.data
        password = sha256_crypt.encrypt(str(form.password.data))

        # Create DictCursor
        cur = mysql.connection.cursor()

        cur.execute("INSERT INTO users(name, email, username, password) VALUES(%s, %s, %s, %s)",
                    (name, email, username, password))

        # Commit to DB
        mysql.connection.commit()

        # Close connection
        cur.close()

        flash('Yor are now register and can log in', 'success')

        return redirect(url_for('login'))

    return render_template('register.html', form=form)


# User logging
@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        # Get fields
        username = request.form['username']
        password_candidate = request.form['password']

        # Create cursor
        cur = mysql.connection.cursor()

        # Get user be username
        result = cur.execute("SELECT * FROM users WHERE username = %s", [username])

        if result > 0:
            # Ger stored hash
            data = cur.fetchone()
            # my_data['username'] = data['username']
            password = data['password']
            # session['password'] = data['id']
            # compare password
            if sha256_crypt.verify(password_candidate, password):
                # Passed
                session['login_in'] = True
                session['username'] = username
                session['password'] = password
                flash('You are now logged in', 'success')
                return redirect(url_for('dashboard'))
            else:
                error = 'Invalid login'
                return render_template('login.html', error=error)
            # Close
            cur.close()
        else:
            error = 'User not found'
            return render_template('login.html', error=error)

    return render_template('login.html')


@app.route('/logout')
def logout():
    session.clear()
    flash('You are now logged out', 'success')
    return redirect(url_for('login'))


@app.route('/about')
def about():
    return render_template('about.html')


@app.route('/gallery', methods=['GET', 'POST'])
def gallery():
    cur = mysql.connection.cursor()
    cur.execute("SELECT * FROM photos ORDER BY timestamp DESC LIMIT " + str(0) + "," + str(10))
    result = cur.fetchall()

    cur.close()
    if request.method == 'POST':
        cur = mysql.connection.cursor()
        new_shit = "DELETE FROM photos"
        cur.execute(new_shit)
        mysql.connection.commit()
        cur.close()
        return redirect(url_for('gallery'))

    return render_template('gallery.html', results=result)


@app.route('/dashboard', methods=['GET', 'POST'])
def dashboard():
    if request.method == 'POST':

        if 'photo' not in request.files:
            return render_template('error.html',
                                   error='No file part, upload unsuccessful.')

        photo = request.files['photo']

        if photo.filename == '':
            return render_template('error.html',
                                   error='No file selected, upload unsuccessful.')

        timestamp = int(time.time()*1000)
        photoid = 'imgcollection-'
        photoid += '-' + str(timestamp) + '.'
        photoid += photo.filename.rsplit('.', 1)[1].lower()

        photo.save(os.path.join(app.config['UPLOAD_FOLDER'], photoid))
        url = photoid

        photo_caption = request.form['img_caption']
        cur = mysql.connection.cursor()
        cur.execute("""INSERT INTO photos VALUES (%s,%s,%s)""", (url, photo_caption, timestamp))
        mysql.connection.commit()

        return redirect(url_for('gallery'))
    # return render_template('upload.html')

    return render_template('dashboard.html')


@app.route('/uploads/<filename>')
def uploaded_photo(filename):
    return send_from_directory(app.config['UPLOAD_FOLDER'], filename)


if __name__ == '__main__':
    app.secret_key = 'secret123'
    app.run(debug=True)
